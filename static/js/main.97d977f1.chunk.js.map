{"version":3,"sources":["components/FeedBack/Section/Section.js","components/FeedBack/FeedbackOptions/FeedbackOptions.js","components/FeedBack/Statistics/Statistics.js","components/FeedBack/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","props","options","onLeaveFeedback","map","option","index","type","className","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","evt","target","state","alert","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,4BAAID,IACHC,MCsBUC,G,MAxBS,SAAAC,GACtB,IAAQC,EAA6BD,EAA7BC,QAASC,EAAoBF,EAApBE,gBACjB,OACE,8BACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,KAAK,SACLC,UAAU,SACVC,KAAMJ,EACNK,QAASP,EALX,SAOGE,GANIC,EAAQD,UCeRM,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8CACSJ,EACP,uBAFF,YAGYC,EACV,uBAJF,QAKQC,EACN,uBANF,UAOUC,EACR,uBARF,sBASsBC,EATtB,SCSaC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCGO,SAASC,IACtB,IAEA,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAmBMC,EAAqB,WACzB,OAAON,EAAeE,EAAkBE,GAW1C,OACE,qCACE,cAAC,EAAD,CAAS3B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBI,QAtCP,CAAC,OAAQ,UAAW,OAsCKC,gBAhClB,SAAAyB,GACrB,OAAQA,EAAIC,OAAOpB,MACjB,IAAK,OACHa,GAAgB,SAAAQ,GAAK,OAAIA,EAAQ,KACjC,MACF,IAAK,UACHN,GAAmB,SAAAM,GAAK,OAAIA,EAAQ,KACpC,MACF,IAAK,MACHJ,GAAe,SAAAI,GAAK,OAAIA,EAAQ,KAChC,MACF,QACEC,MAAM,qCAsBPJ,IAAuB,EACtB,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACE,cAAC,EAAD,CACEc,KAAMS,EACNR,QAASU,EACTT,IAAKW,EACLV,MAAOY,IACPX,mBApB8B,WACtC,IAAMD,EAAQY,IAEd,GAAIZ,EAAQ,EACV,OAAOiB,KAAKC,MAAOZ,EAAeN,EAAS,KAgBjBmB,OAIxB,cAAC,EAAD,CAAchB,QAAQ,4BCvD9BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.97d977f1.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <p>{title}</p>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css';\r\n\r\nconst FeedbackOptions = props => {\r\n  const { options, onLeaveFeedback } = props;\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <button\r\n          key={index + option}\r\n          type=\"button\"\r\n          className=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    Good: {good}\r\n    <br />\r\n    Neutral: {neutral}\r\n    <br />\r\n    Bad: {bad}\r\n    <br />\r\n    Total: {total}\r\n    <br />\r\n    Positive feedback: {positivePercentage} %\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport './App.css';\nimport Section from './components/FeedBack/Section/Section';\nimport FeedbackOptions from './components/FeedBack/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/FeedBack/Statistics/Statistics';\nimport Notification from './components/FeedBack/Notification/Notification';\n\nexport default function App() {\n  const OPTIONS = ['good', 'neutral', 'bad'];\n\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n\n  const handleFeedback = evt => {\n    switch (evt.target.name) {\n      case 'good':\n        setGoodFeedback(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutralFeedback(state => state + 1);\n        break;\n      case 'bad':\n        setBadFeedback(state => state + 1);\n        break;\n      default:\n        alert('Incorrect options detected!');\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return goodFeedback + neutralFeedback + badFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n\n    if (total > 0) {\n      return Math.round((goodFeedback / total) * 100);\n    }\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={OPTIONS} onLeaveFeedback={handleFeedback} />\n      </Section>\n      {countTotalFeedback() > 0 ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={goodFeedback}\n            neutral={neutralFeedback}\n            bad={badFeedback}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"There is no feedback\" />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}